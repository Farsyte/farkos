* FARKOS: Farsyte returns to kOS [save 3]

This project attempts to construct a collection of KOS scripts to
automate control of vessels in KSP.

My goal here is to enjoy the process of building an autopilot
with a growing collection of capabilities, including combining
them into automating entire missions.

** Design Directions

*** No Local Copies

Source files will be run from ARCHIVE as needed. This means it will
be important to maintain communication with all vessels.

This reduces the pressure on local storage.

Local storage will be reserved for persisting values relating to
the state of the mission, allowing the CPU to continue a mission
after rebooting.

Method used to store data on the vessel is TBD, but my observation is
that the built-in JSON facilities produce unacceptably large files.

I may shift to storing each variable in its own KS file locally which
contains a single statement setting a lexicon value.

*** Global Namespace

The current major incarnation of this package marks a shift back to
packages that manifest as lexicons obtained from the package manager,
allowing packages that do not modify the global namespace.

It is hoped that this will not only ease the concerns about global
namespace collisions, but simplify the process of finding the
implementation of a function when looking at its caller.

*** Code Style tweaked for VS Code "folding" feature

For reasons, I am attempting to "daily drive" Microsft VS Code, and
it provides code folding to hide the contents of blocks of code. This
facility will collapse blocks in curly-braces {} which is very nice
for folding away details.

See [[doc/folding.org]] for more on this.

** Mission Names

I have played with {adverb} {adjective} {object} style names. These
were cute and humerous but in the end the joke wore thin, and I found
myself using other methods to organize my vessels so I could pick out
the right one for each mission.

Therefore ...

Missions will be named in ways that suggest what they are doing; for
example, including "tourist" or "orbit" or "rescue" in vessel designs
that are specific to those needs. I may decide to use compact names,
and will try to document the abbreviations here.

    X       Experimental: initial attempts at anything new
    H       Hover specialized vessels
    S       Sub-orbital specialized vessels
    O       Simple orbital-specialized vessels

** Module system and bootstrap

kOS has no formal package model -- the idea is that you load up a
source file and run it, and maybe it runs other files.

See [[doc/import.org]] for information about the ~IMPORT~ function,
the lack of any ~EXPORT~ facility, and the ~0:STD.KS~ file.
